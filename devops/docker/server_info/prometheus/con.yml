groups:
  - name: ExporterDown
    rules:
      - alert: NodeDown
        expr: up{job='node'} == 0
        for: 1m
        labels:
          severity: Error
        annotations:
          summary: "{{$labels.instance}} of job {{$labels.job}} has been down for more than 1 minutes."
          description: "NodeExporterDown"
  - name: LowDiskSpace
    rules:
      - alert: DiskSpace70%Free
        expr: (( node_filesystem_free_bytes{job="node"}  / node_filesystem_size_bytes{job="node"} )) <= 1
        for: 1m
        labels:
          severity: Warning
        annotations:
          summary: "Instance1 {{$labels.instance}} is low on disk space"
          description: "{{$labels.instance}}  has only {{ $value }}% free."
  - name: example-node-exporter-rules
    rules:
      # The count of CPUs per node, useful for getting CPU time as a percent of total.
      - record: instance:node_cpus:count
        expr: count(node_cpu_seconds_total{mode="idle"}) without (cpu,mode)

      # CPU in use by CPU.
      - record: instance_cpu:node_cpu_seconds_not_idle:rate5m
        expr: sum(rate(node_cpu_seconds_total{mode!="idle"}[5m])) without (mode)

      # CPU in use by mode.
      - record: instance_mode:node_cpu_seconds:rate5m
        expr: sum(rate(node_cpu_seconds_total[5m])) without (cpu)

      # CPU in use ratio.
      - record: instance:node_cpu_utilization:ratio
        expr: sum(instance_mode:node_cpu_seconds:rate5m{mode!="idle"}) without (mode) / instance:node_cpus:count


      # space available.
      - record: instance:node_filesystem_free:fs_used_percents
        expr: (( node_filesystem_free_bytes{job="node"}  / node_filesystem_size_bytes{job="node"} ))

      - record: instance:uptime
        expr: (( (time() - process_start_time_seconds) / 86400 ))